import Head from 'next/head'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import Link from 'next/link'
import { useRouter } from 'next/router'
import { useSession } from 'next-auth/react'
import { SidebarNavigation } from '@/components/MainNavigation'
import axios from 'axios'
import { useEffect, useState } from 'react'
import { useQuery } from '@tanstack/react-query'
import { ItemsRenderables } from '@/components/ItemsRenderables'

const inter = Inter({ subsets: ['latin'] })

// const MOVIE_DB_TRENDING_URL_FOR_MOVIES = `https://api.themoviedb.org/3/trending/movie/day?api_key=${process.env.MOVIE_DB_API_KEY}`

const MOVIE_DB_POPULAR_URL_FOR_MOVIES = `https://api.themoviedb.org/3/movie/popular?api_key=01e42a1b87f077bd866179fa7f1396d6`

// const MOVIE_DB_TRENDING_URL_FOR_TV = `https://api.themoviedb.org/3/trending/tv/day?api_key=${process.env.MOVIE_DB_API_KEY}`

const MOVIE_DB_POPULAR_URL_FOR_TV = `https://api.themoviedb.org/3/popular/tv/day?api_key=${process.env.MOVIE_DB_API_KEY}`

// its always a good practice to view this in build mode to see what will be deployed in procution mode and how app wqill behave before actual deployment takes place

// index.js will be treated as home routes by default
// nextJS uses file based routing system
// any file added into Pages folder will be treated as a destination for route page, which includes nested, dynamic, and static kind of pages
export default function Home() {
  // const [movies, setMovies] = useState()

  // const fetchMovies = () => {
  //   axios.get(MOVIE_DB_POPULAR_URL_FOR_MOVIES)
  //   .then(resp => setMovies(resp.data))
  //   .catch(err => console.log("error occured....", err.message))
  // }

  // useEffect(() => {
  //   fetchMovies()
  // }, [])

  const { data: movies, isError, isLoading, error } = useQuery(["popular-movies"], () => {
    return axios.get(MOVIE_DB_POPULAR_URL_FOR_MOVIES).then(data => data.data)
  })

  console.log(movies, "movies!!")

  return (
    <>
      <Head>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className='flex flex-row gap-4 bg-gray-400 py-4'>
        <SidebarNavigation />
        {isError ? <h2>Error Occured....{error.message}</h2> : null}
        {isLoading ? <h2>Data Loading....</h2> : null}
        {/* <h1>What What!!</h1> */}
        <ItemsRenderables data={movies?.results} />
      </main>
    </>
  )
}

// export const getStaticProps = async () => {
//   const {data} = useQuery(["popular-movies"], () => {
//     return axios.get(MOVIE_DB_POPULAR_URL_FOR_MOVIES)
//   })

//   return {
//     props: {
//       movies: data.data
//     }
//   }
// }